<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FunctionsTitle" xml:space="preserve">
    <value>Input here: </value>
  </data>
  <data name="GraphButtonText" xml:space="preserve">
    <value>Graph</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>FunGrapher - Online Function Grapher, easy to use, multiple functions support.Graph Calculator</value>
  </data>
  <data name="ResetButtonText" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ScaleOfTAxiesTitle" xml:space="preserve">
    <value>t</value>
  </data>
  <data name="ScaleOfXAxiesTitle" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="ScaleOfYAxiesTitle" xml:space="preserve">
    <value>y</value>
  </data>
  <data name="SeoDescription" xml:space="preserve">
    <value>Online Function Grapher. This is an easy to use Online Function Grapher, supporting multiple functions. Input your functions and the graph appears. It can be used as a graph calculator as well, find the root solution for equations quickly.</value>
  </data>
  <data name="ToTitle" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="SeoKeywords" xml:space="preserve">
    <value>FunGrapher, grapher, graph, function, calculator</value>
  </data>
  <data name="ShowLegend" xml:space="preserve">
    <value>Legend</value>
  </data>
  <data name="LogoPath" xml:space="preserve">
    <value>~/Content/Images/funGrapherLogo_zh-CN.png</value>
  </data>
  <data name="LogoRaw" xml:space="preserve">
    <value>&lt;a href="#" onclick="return false;" title="FunGrapher - Graph functions for fun!"&gt;&lt;img src="{0}" alt="FunGrapher - Graph for fun!" /&gt;&lt;/a&gt;</value>
  </data>
  <data name="Setting" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="LockRatio" xml:space="preserve">
    <value>Lock Ratio</value>
  </data>
  <data name="CloseMsg" xml:space="preserve">
    <value>Close message window</value>
  </data>
  <data name="CloseTips" xml:space="preserve">
    <value>Close help</value>
  </data>
  <data name="ShowHelp" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Tips" xml:space="preserve">
    <value>&lt;p&gt;Use x/y to denote the independent/dependent variables. Use x^2 to denote the square power to x and x^3 to denote the cube power to x and so on. Use semicolon (;) to separate multiple functions.&lt;/p&gt;
&lt;p&gt;Currently this tool only supports &lt;strong style="color: red;"&gt;Explicit Function&lt;/strong&gt;, for example, below functions are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;y = x^2 + 2;&lt;/li&gt;
&lt;li&gt;x = y^3 + 2;&lt;/li&gt;
&lt;li style="color: red;"&gt;Each function should begin with x= or y= and end with a semicolon (;)&lt;/li&gt;
&lt;li style="color: red;"&gt;If a function begins with y=, then the independent variable on the right hand side of the equal sign (=) must be x, and vice versa.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Below functions (Unexplicit functions) are not supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x + y = 5;&lt;/li&gt;
&lt;li&gt;x^2 + y^2 = 1;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For trigonometric functions, you should input them this way (The &lt;strong style="color: red;"&gt;parenthesis&lt;/strong&gt; should follow the function name):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;y = sin&lt;span style="color: red;"&gt;(&lt;/span&gt;x&lt;span style="color: red;"&gt;)&lt;/span&gt;;&lt;/li&gt;
&lt;li&gt;y = cos&lt;span style="color: red;"&gt;(&lt;/span&gt;2*x&lt;span style="color: red;"&gt;)&lt;/span&gt;;&lt;/li&gt;
&lt;li&gt;y = tan&lt;span style="color: red;"&gt;(&lt;/span&gt;0.5*x&lt;span style="color: red;"&gt;)&lt;/span&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tool supports the function group like this(Please do wrap them in curly brackets {}):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;{x = sin(t); y = cos(t)}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All the functions this tool supports can be found &lt;a href="http://www.zizhujy.com/blog/post/2011/10/10/Alphabetic-list-of-functions-supported-by-Online-Function-Graffiti.aspx" target="_blank" title="Alphabetic list of functions supported by Online Function Grapher"&gt;Here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Operators should be input as below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Addition: +&lt;/li&gt;
&lt;li&gt;Subtraction: -&lt;/li&gt;
&lt;li&gt;Multiplication: *&lt;/li&gt;
&lt;li&gt;Dividition: /&lt;/li&gt;
&lt;li&gt;Power: ^&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can scroll your mouse wheel to zoom out/in the graphs.&lt;/p&gt;</value>
  </data>
  <data name="GetLinkTitle" xml:space="preserve">
    <value>Get link to current graph(s)</value>
  </data>
  <data name="CloseLinkDialog" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="GetLinkMessageTitle" xml:space="preserve">
    <value>Link to current graph(s):</value>
  </data>
  <data name="BannerTitle" xml:space="preserve">
    <value>Online Function Grapher</value>
  </data>
  <data name="AdZone" xml:space="preserve">
    <value>&lt;script type="text/javascript"&gt;&lt;!--
            google_ad_client = "ca-pub-9332882982479681";
            /* 宽幅摩天大楼160x600, 创建于 10-3-22 */
            google_ad_slot = "9807892611";
            google_ad_width = 160;
            google_ad_height = 600;
        //--&gt;
        &lt;/script&gt;
        &lt;script type="text/javascript"
        src="http://pagead2.googlesyndication.com/pagead/show_ads.js"&gt;
        &lt;/script&gt;</value>
  </data>
  <data name="NewVersion" xml:space="preserve">
    <value>New version is available, with implicit function plot support!</value>
  </data>
</root>